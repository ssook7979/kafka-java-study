[2020-02-24 09:16:36,868] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-24 09:23:45,218] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:23:45,261] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-02-24 09:23:45,261] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 09:23:45,264] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 09:23:45,266] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 09:23:45,270] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 09:23:45,292] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 4294967335) (kafka.controller.KafkaController)
[2020-02-24 09:23:45,302] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:23:45,307] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-24 09:23:45,329] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-24 09:23:45,331] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:23:45,332] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 09:23:45,333] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-24 09:23:45,334] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 09:23:45,336] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-24 09:23:45,336] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 09:23:45,336] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 09:23:45,344] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 09:23:45,344] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 09:23:45,360] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:23:45,361] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:23:45,373] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:23:45,373] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:23:45,373] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:23:45,373] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:23:45,375] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:23:45,380] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-02-24 09:23:45,397] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 09:23:45,397] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 09:23:45,397] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 09:23:45,398] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 09:23:45,398] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 09:23:45,416] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 09:23:45,466] INFO [RequestSendThread controllerId=1] Controller 1 connected to zoo1:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 09:23:50,417] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:23:50,417] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:23:50,418] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:28:50,419] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:28:50,419] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:28:50,419] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:33:50,419] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:33:50,420] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:33:50,420] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:38:50,420] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:38:50,420] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:38:50,420] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:39:27,144] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-02-24 09:39:27,144] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-02-24 09:39:27,145] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-02-24 09:39:27,146] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-02-24 09:39:28,338] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:39:28,338] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:39:28,339] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:39:28,339] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-02-24 09:39:28,339] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:39:28,340] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:39:28,340] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:39:28,342] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-02-24 09:39:28,342] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-02-24 09:39:28,344] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-02-24 09:39:28,346] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-02-24 09:40:08,957] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:40:08,989] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-02-24 09:40:08,989] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 09:40:08,991] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 09:40:08,994] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 09:40:08,995] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 09:40:09,017] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 4294967355) (kafka.controller.KafkaController)
[2020-02-24 09:40:09,022] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:40:09,028] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-24 09:40:09,054] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-24 09:40:09,054] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:40:09,056] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 09:40:09,056] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-24 09:40:09,056] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 09:40:09,058] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-24 09:40:09,058] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 09:40:09,058] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 09:40:09,059] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 09:40:09,059] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 09:40:09,071] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:40:09,071] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:40:09,079] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:40:09,079] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:40:09,084] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:40:09,084] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:40:09,088] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:40:09,088] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-02-24 09:40:09,099] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 09:40:09,099] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 09:40:09,099] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 09:40:09,113] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 09:40:09,114] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 09:40:09,126] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 09:40:09,230] INFO [RequestSendThread controllerId=1] Controller 1 connected to zoo1:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 09:40:14,127] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:40:14,127] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:40:14,128] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-24 09:41:57,490] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-02-24 09:41:57,490] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-02-24 09:41:57,490] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-02-24 09:41:57,492] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-02-24 09:41:57,965] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:41:57,965] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:41:57,966] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:41:57,966] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-02-24 09:41:57,966] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:41:57,967] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:41:57,967] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:41:57,968] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-02-24 09:41:57,968] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-02-24 09:41:57,969] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-02-24 09:41:57,973] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-02-24 09:42:11,614] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-24 09:42:11,644] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-02-24 09:42:11,644] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-24 09:42:11,646] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-24 09:42:11,648] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-24 09:42:11,653] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-24 09:42:11,663] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 4294967374) (kafka.controller.KafkaController)
[2020-02-24 09:42:11,666] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:42:11,668] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-24 09:42:11,700] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-24 09:42:11,700] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-24 09:42:11,700] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-24 09:42:11,700] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-24 09:42:11,701] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-24 09:42:11,703] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-24 09:42:11,703] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-24 09:42:11,704] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-24 09:42:11,712] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-24 09:42:11,712] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-24 09:42:11,724] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:42:11,736] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:42:11,748] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:42:11,748] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-24 09:42:11,748] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:42:11,749] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:42:11,751] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-24 09:42:11,752] INFO [Controller id=1] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-02-24 09:42:11,759] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 09:42:11,759] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-24 09:42:11,759] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-24 09:42:11,759] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-24 09:42:11,760] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-24 09:42:11,773] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-24 09:42:11,849] INFO [RequestSendThread controllerId=1] Controller 1 connected to zoo1:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-24 09:42:16,775] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-24 09:42:16,776] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-24 09:42:16,776] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
