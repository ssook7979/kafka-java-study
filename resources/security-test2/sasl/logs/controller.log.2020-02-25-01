[2020-02-25 01:00:32,402] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-25 01:08:31,028] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:08:31,051] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-02-25 01:08:31,051] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-25 01:08:31,054] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-25 01:08:31,056] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-25 01:08:31,058] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-25 01:08:31,067] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 8589934623) (kafka.controller.KafkaController)
[2020-02-25 01:08:31,076] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:08:31,084] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-25 01:08:31,108] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:08:31,108] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-25 01:08:31,108] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-25 01:08:31,109] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-25 01:08:31,112] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-25 01:08:31,113] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:08:31,113] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-25 01:08:31,113] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-25 01:08:31,113] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-25 01:08:31,118] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-25 01:08:31,121] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:08:31,122] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:08:31,128] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:08:31,128] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:08:31,128] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:08:31,129] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:08:31,134] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:08:31,134] INFO [Controller id=1] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-02-25 01:08:31,143] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:08:31,144] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:08:31,144] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:08:31,144] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-25 01:08:31,145] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-25 01:08:31,165] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-25 01:08:31,287] INFO [RequestSendThread controllerId=1] Controller 1 connected to zoo1:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-25 01:08:36,166] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:08:36,166] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:08:36,167] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:09:11,185] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-02-25 01:09:11,185] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-02-25 01:09:11,186] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-02-25 01:09:11,187] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-02-25 01:09:12,164] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:09:12,165] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:09:12,165] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:09:12,165] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-02-25 01:09:12,166] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:09:12,167] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:09:12,168] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:09:12,169] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-02-25 01:09:12,169] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-02-25 01:09:12,169] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-02-25 01:09:12,172] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-02-25 01:18:33,455] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:18:33,485] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2020-02-25 01:18:33,485] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-25 01:18:33,493] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-25 01:18:33,495] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-25 01:18:33,497] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-25 01:18:33,517] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 8589934642) (kafka.controller.KafkaController)
[2020-02-25 01:18:33,523] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:18:33,530] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-25 01:18:33,543] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:18:33,544] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-25 01:18:33,544] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-25 01:18:33,544] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-25 01:18:33,545] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-25 01:18:33,547] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-25 01:18:33,547] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:18:33,548] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-25 01:18:33,548] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-25 01:18:33,548] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-25 01:18:33,564] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:18:33,567] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:18:33,570] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:18:33,570] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:18:33,576] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:18:33,577] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:18:33,579] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:18:33,579] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2020-02-25 01:18:33,586] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:18:33,587] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:18:33,587] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:18:33,587] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-25 01:18:33,587] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-25 01:18:33,602] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-25 01:18:33,699] INFO [RequestSendThread controllerId=1] Controller 1 connected to zoo1:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-25 01:18:38,603] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:18:38,603] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:18:38,604] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:20:09,703] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-02-25 01:20:09,703] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-02-25 01:20:09,703] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-02-25 01:20:09,705] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-02-25 01:20:10,652] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:20:10,653] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:20:10,653] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:20:10,654] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-02-25 01:20:10,655] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:20:10,656] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:20:10,656] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:20:10,658] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-02-25 01:20:10,658] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-02-25 01:20:10,658] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-02-25 01:20:10,660] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-02-25 01:20:48,378] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:20:48,409] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2020-02-25 01:20:48,409] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-25 01:20:48,413] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-25 01:20:48,415] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-25 01:20:48,416] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-25 01:20:48,439] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 8589934661) (kafka.controller.KafkaController)
[2020-02-25 01:20:48,444] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:20:48,447] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-25 01:20:48,461] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:20:48,461] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-25 01:20:48,462] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-25 01:20:48,462] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-25 01:20:48,463] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-25 01:20:48,464] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-25 01:20:48,465] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:20:48,465] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-25 01:20:48,465] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-25 01:20:48,465] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-25 01:20:48,469] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:20:48,478] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:20:48,484] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:20:48,484] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:20:48,490] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:20:48,496] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:20:48,501] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:20:48,502] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2020-02-25 01:20:48,512] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:20:48,512] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:20:48,512] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:20:48,512] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-25 01:20:48,513] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-25 01:20:48,529] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-25 01:20:48,613] INFO [RequestSendThread controllerId=1] Controller 1 connected to zoo1:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-25 01:20:53,530] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:20:53,530] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:20:53,531] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:25:53,532] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:25:53,532] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:25:53,532] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:29:50,800] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-02-25 01:29:50,800] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-02-25 01:29:50,800] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-02-25 01:29:50,802] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2020-02-25 01:29:51,939] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:29:51,940] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:29:51,940] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:29:51,940] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-02-25 01:29:51,941] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:29:51,942] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:29:51,942] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:29:51,943] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-02-25 01:29:51,943] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-02-25 01:29:51,943] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-02-25 01:29:51,944] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-02-25 01:30:35,848] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-25 01:30:35,881] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2020-02-25 01:30:35,882] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-02-25 01:30:35,884] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-25 01:30:35,888] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-25 01:30:35,890] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-02-25 01:30:35,914] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 8589934680) (kafka.controller.KafkaController)
[2020-02-25 01:30:35,928] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:30:35,933] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-02-25 01:30:35,953] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-02-25 01:30:35,954] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-02-25 01:30:35,955] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-25 01:30:35,955] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-25 01:30:35,957] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-02-25 01:30:35,958] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-25 01:30:35,962] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:30:35,962] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-25 01:30:35,962] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-25 01:30:35,962] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-25 01:30:35,978] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:30:35,979] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:30:35,982] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:30:35,982] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-02-25 01:30:35,987] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:30:35,987] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:30:35,989] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-02-25 01:30:35,989] INFO [Controller id=1] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2020-02-25 01:30:35,994] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:30:35,994] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-25 01:30:35,994] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-25 01:30:35,995] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-25 01:30:35,995] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-02-25 01:30:36,002] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-25 01:30:36,099] INFO [RequestSendThread controllerId=1] Controller 1 connected to zoo1:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-25 01:30:41,003] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:30:41,003] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:30:41,004] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:35:41,004] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:35:41,005] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:35:41,005] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:40:41,005] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:40:41,005] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:40:41,005] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:45:41,006] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:45:41,006] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:45:41,006] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:50:41,006] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:50:41,006] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:50:41,006] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-02-25 01:55:41,007] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-25 01:55:41,007] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-25 01:55:41,007] DEBUG [Controller id=1] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
